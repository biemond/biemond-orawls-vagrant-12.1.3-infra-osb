# load common defs
execfile('utils.py')

WLHOME='<%= @weblogic_home_dir %>'
DOMAIN_PATH='<%= @domain_dir %>'
DOMAIN='<%= @domain_name %>'
<% if @apps_dir %>
APP_PATH='<%= @apps_dir %>/<%= @domain_name %>'
<% end %>

# security
JSSE_ENABLED=<%= @jsse_enabled %>
CUSTOM_IDENTITY_ENABLED=<%= @custom_identity %>
DEVELOPMENT_MODE=<%= @development_mode %>

WEBLOGIC_VERSION=<%= @version %>

ADMIN_SERVER='<%= @adminserver_name %>'
ADMIN_USER='<%= @weblogic_user %>'
ADMIN_PASSWORD='<%= @weblogic_password %>'

JAVA_HOME='<%= @jdk_home_dir %>'

<% if @java_arguments["ADM"] %>
ADM_JAVA_ARGUMENTS='<%= @java_arguments["ADM"] %>'
<% else %>
ADM_JAVA_ARGUMENTS='-XX:PermSize=256m -XX:MaxPermSize=512m -Xms1024m -Xmx1024m -Dweblogic.Stdout=<%= @admin_nodemanager_log_dir %>/<%= @adminserver_name %>.out -Dweblogic.Stderr=<%= @admin_nodemanager_log_dir %>/<%= @adminserver_name %>_err.out'
<% end %>

print('Start normal domain... with template <%= @template %>')
readTemplate('<%= @template %>')

print('Set crossdomain')
create('base_domain','SecurityConfiguration')
cd('/SecurityConfiguration/base_domain')
set('CrossDomainSecurityEnabled',true)

cd('/')
print('Set domain log')
changeLog('domain', DOMAIN, '<%= @admin_nodemanager_log_dir %>')

print('Create machine LocalMachine with type UnixMachine')
createMachine('UnixMachine', 'LocalMachine', '<%= @adminserver_address %>')

cd('/Servers/AdminServer')
# name of adminserver
set('Name',ADMIN_SERVER )

cd('/Servers/'+ADMIN_SERVER)
set('Machine','LocalMachine')

# address and port
set('ListenAddress','<%= @adminserver_address %>')
set('ListenPort',<%= @adminserver_port %>)

create(ADMIN_SERVER,'ServerStart')
cd('ServerStart/'+ADMIN_SERVER)
set('Arguments', ADM_JAVA_ARGUMENTS)
set('JavaVendor','Sun')
set('JavaHome', JAVA_HOME)

cd('/Server/'+ADMIN_SERVER)
create(ADMIN_SERVER,'SSL')
cd('SSL/'+ADMIN_SERVER)
set('Enabled', 'False')
set('HostNameVerificationIgnored', 'True')

if JSSE_ENABLED == true:
  set('JSSEEnabled','True')
else:
  set('JSSEEnabled','False')

if CUSTOM_IDENTITY_ENABLED == true:
  print('Set adminserver custom identity')
  cd('/Server/'+ADMIN_SERVER)
  set('KeyStores'                                ,'CustomIdentityAndCustomTrust')
  set('CustomIdentityKeyStoreFileName'           ,'<%= @custom_identity_keystore_filename %>')
  set('CustomIdentityKeyStorePassPhraseEncrypted','<%= @custom_identity_keystore_passphrase %>')
  set('CustomTrustKeyStoreFileName'              ,'<%= @trust_keystore_file %>')
  set('CustomTrustKeyStorePassPhraseEncrypted'   ,'<%= @trust_keystore_passphrase %>')
  cd('SSL/'+ADMIN_SERVER)
  set('ServerPrivateKeyAlias'                    ,'<%= @custom_identity_alias %>')
  set('ServerPrivateKeyPassPhraseEncrypted'      ,'<%= @custom_identity_privatekey_passphrase %>')

print('Change AdminServer log')
changeLog('server', ADMIN_SERVER, '<%= @admin_nodemanager_log_dir %>')

print('Set password...')
cd('/')
cd('Security/base_domain/User/weblogic')

# weblogic user name + password
set('Name',ADMIN_USER)
cmo.setPassword(ADMIN_PASSWORD)

# Set domain save options:
# - ServerStartMode: Set mode to development.
# - JavaHome: Sets home directory for the JVM used when starting the server.

if DEVELOPMENT_MODE == true:
  setOption('ServerStartMode', 'dev')
else:
  setOption('ServerStartMode', 'prod')

setOption('JavaHome', JAVA_HOME)

print('write domain...')
# write path + domain name
writeDomain(DOMAIN_PATH)

closeTemplate()

readDomain(DOMAIN_PATH)

if WEBLOGIC_VERSION == 1212 or WEBLOGIC_VERSION == 1213:
    print 'Adding WLS Coherence Template'
    addTemplate('<%= @templateCoherence %>')

updateDomain()
closeDomain();

es = encrypt(ADMIN_PASSWORD,DOMAIN_PATH)

readDomain(DOMAIN_PATH)

print('set domain password...')
cd('/SecurityConfiguration/'+DOMAIN)
set('CredentialEncrypted',es)
print('Set nodemanager password')
set('NodeManagerUsername',ADMIN_USER )
set('NodeManagerPasswordEncrypted',es )

updateDomain()
closeDomain()

createAdminStartupPropertiesFile(DOMAIN_PATH+'/servers/'+ADMIN_SERVER+'/data/nodemanager',ADM_JAVA_ARGUMENTS)
createBootPropertiesFile(DOMAIN_PATH+'/servers/'+ADMIN_SERVER+'/security','boot.properties',ADMIN_USER,ADMIN_PASSWORD)
createBootPropertiesFile(DOMAIN_PATH+'/config/nodemanager','nm_password.properties',ADMIN_USER,ADMIN_PASSWORD)

print('Exiting...')
exit()
