
WLHOME='<%= @weblogic_home_dir %>'
DOMAIN_PATH='<%= @domain_dir %>'

bpmEnabled     = <%= @bpm_enabled %>
bamEnabled     = <%= @bam_enabled %>
soaEnabled     = <%= @soa_enabled %>
osbEnabled     = <%= @osb_enabled %>

SOAClusterName = '<%= @soa_cluster_name %>'
BAMClusterName = '<%= @bam_cluster_name %>'
OSBClusterName = '<%= @osb_cluster_name %>'
Admin          = '<%= @adminserver_name %>'

def getFirstClusterServer(cluster):
    s = ls('/Server')
    clustername = " "
    for token in s.split("drw-"):
        token=token.strip().lstrip().rstrip()
        path="/Server/"+token
        cd(path)
        if not token == Admin and not token == '':
            clustername = get('Cluster')
            searchClusterStr = cluster+":"
            clusterNameStr = str(clustername)
            if not clusterNameStr.find(searchClusterStr) == -1:
                return token    

def createSAFAgents(cluster, currentServerCnt):
    print ' '
    print "Creating SAF Servers for the cluster :- ", cluster
    s = ls('/Server')
    print ' '
    clustername = " "
    serverCnt = currentServerCnt
    for token in s.split("drw-"):
        token=token.strip().lstrip().rstrip()
        path="/Server/"+token
        cd(path)
        if not token == 'AdminServer' and not token == '':
            clustername = get('Cluster')
            print "Cluster Associated with the Server [",token,"] :- ",clustername
            print ' '
            searchClusterStr = cluster+":"
            clusterNameStr = str(clustername)
            print "searchClusterStr = ",searchClusterStr
            print "clusterNameStr = ",clusterNameStr
            if not clusterNameStr.find(searchClusterStr) == -1:
                print token, " is associated with ", cluster    
                cd('/')

                fileStoreName = 'WseeFileStore_auto_'+str(serverCnt)
                safAgent      = 'ReliableWseeSAFAgent_auto_'+str(serverCnt)
                
                cd('/')
                create(safAgent, 'SAFAgent')
                cd('/SAFAgent/'+safAgent)
                set ('Target'     , token)
                set ('Store'      , fileStoreName)
                set ('ServiceType','Both')
    
                serverCnt = serverCnt + 1

osbServerGroup  = ["OSB-MGD-SVRS-COMBINED"]
serverGroupNone = []

readDomain(DOMAIN_PATH)

cd('/')

if osbEnabled == true:
    cd('/Servers/osb_server1')
    set('ListenAddress','')

updateDomain()

if osbEnabled == true:
    cd('/')
    setServerGroups('osb_server1', serverGroupNone)                      
    setServerGroups('OsbServer1' , osbServerGroup)                      
    delete('osb_server1', 'Server')
    OSBServer1Name = getFirstClusterServer(OSBClusterName)
    cd('/')
    assign('AppDeployment', 'Service Bus Cluster Singleton Marker Application', 'Target', OSBServer1Name)
    assign('AppDeployment', 'Service Bus Domain Singleton Marker Application' , 'Target', OSBServer1Name)

updateDomain()
dumpStack()

if osbEnabled == true:
    cd('/')
    delete('ReliableWseeSAFAgent'  ,'SAFAgent')
    delete('OSBAQJMSServer'        ,'JMSSystemResource')
    delete('UMSAQJMSSystemResource','JMSSystemResource')
    createSAFAgents(OSBClusterName, 1)

updateDomain()
dumpStack()

print 'Successfully Updated SOA Domain.'

closeDomain() 