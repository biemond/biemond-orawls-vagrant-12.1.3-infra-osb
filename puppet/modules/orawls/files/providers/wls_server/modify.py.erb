# check the domain else we need to skip this (done in wls_access.rb)
real_domain='<%= domain %>'



name          = '<%= server_name %>'
classpath     = '<%= classpath %>'
arguments     = '''<%= arguments %>'''
machineName   = '<%= machine %>'

logFilename                 = '<%= logfilename %>'
log_file_min_size           = '<%= log_file_min_size %>'
log_filecount               = '<%= log_filecount %>'
log_rotate_logon_startup    = '<%= log_rotate_logon_startup %>'
log_rotationtype            = '<%= log_rotationtype %>'
log_number_of_files_limited = '<%= log_number_of_files_limited %>'

log_http_Filename           = '<%= log_http_filename %>'
log_datasource_Filename     = '<%= log_datasource_filename %>'

listenAddress = '<%= listenaddress %>'
listenPort    = <%= listenport %>
sslEnabled    = <%= sslenabled %>
sslHostnameVerificationIgnored = <%= sslhostnameverificationignored %>
two_way_ssl = <%= two_way_ssl %>
client_certificate_enforced = <%= client_certificate_enforced %>
sslListenPort = <%= ssllistenport %>

jsseenabled   = <%= jsseenabled %>

custom_identity                        = '<%= custom_identity %>'
custom_identity_keystore_filename      = '<%= custom_identity_keystore_filename %>'
custom_identity_keystore_passphrase    = '<%= custom_identity_keystore_passphrase %>'
custom_identity_alias                  = '<%= custom_identity_alias %>'
custom_identity_privatekey_passphrase  = '<%= custom_identity_privatekey_passphrase %>'
trust_keystore_file                    = '<%= trust_keystore_file %>'
trust_keystore_passphrase              = '<%= trust_keystore_passphrase %>'

default_file_store                     = '<%= default_file_store %>'
max_message_size                       = '<%= max_message_size %>'


def format(value):
    if (value):
    	return value
    else:
    	return None

def formatBoolean(value):
    if value == 1:
        return 'True'
    else:
        return 'False'

def formatBoolean2(value):
  if value == '1':
    return true
  else:
    return false

edit()
startEdit()

try:

    cd('/Servers/'+name)
    set('Machine',getMBean('/Machines/'+machineName))

    set('ListenAddress', format(listenAddress))

    set('ListenPort', format(listenPort))

    if max_message_size:
      set('MaxMessageSize',max_message_size)

    set('ServerStart/'+name+'/ClassPath', format(classpath))

    set('ServerStart/'+name+'/Arguments', format(arguments))

    if custom_identity == '1':
      set('KeyStores'                                ,'CustomIdentityAndCustomTrust')
      set('CustomIdentityKeyStoreFileName'           ,custom_identity_keystore_filename)
      set('CustomIdentityKeyStorePassPhrase'         ,custom_identity_keystore_passphrase)
      set('CustomTrustKeyStoreFileName'              ,trust_keystore_file)
      set('CustomTrustKeyStorePassPhrase'            ,trust_keystore_passphrase)
      cd('SSL/'+name)
      set('ServerPrivateKeyAlias'                    ,custom_identity_alias)
      set('ServerPrivateKeyPassPhrase'               ,custom_identity_privatekey_passphrase)
    else:
      set('KeyStores'                                ,'DemoIdentityAndDemoTrust')

    cd('/Servers/'+name+'/SSL/'+name)

    set('Enabled', formatBoolean(sslEnabled))

    set('JSSEEnabled',formatBoolean(jsseenabled))

    set('HostnameVerificationIgnored', formatBoolean(sslHostnameVerificationIgnored))
    set('TwoWaySSLEnabled'           , formatBoolean(two_way_ssl))
    set('ClientCertificateEnforced'  , formatBoolean(client_certificate_enforced))

    set('ListenPort', sslListenPort)

    cd('/Servers/'+name+'/Log/'+name)
    if logFilename:
      set('FileName', logFilename)
    if log_rotationtype:
      cmo.setRotationType(log_rotationtype)
    if log_rotate_logon_startup:
      cmo.setRotateLogOnStartup(formatBoolean2(log_rotate_logon_startup))
    if log_filecount:
      cmo.setFileCount(int(log_filecount))
    if log_number_of_files_limited:
      cmo.setNumberOfFilesLimited(int(log_number_of_files_limited))
    if log_file_min_size:
      cmo.setFileMinSize(int(log_file_min_size))

    cd('/Servers/'+name+'/WebServer/'+name+'/WebServerLog/'+name)
    if log_http_Filename:
      set('FileName', log_http_Filename)
    if log_rotationtype:
      cmo.setRotationType(log_rotationtype)
    if log_rotate_logon_startup:
      cmo.setRotateLogOnStartup(formatBoolean2(log_rotate_logon_startup))
    if log_filecount:
      cmo.setFileCount(int(log_filecount))
    if log_number_of_files_limited:
      cmo.setNumberOfFilesLimited(int(log_number_of_files_limited))
    if log_file_min_size:
      cmo.setFileMinSize(int(log_file_min_size))

    cd('/Servers/'+name+'/DataSource/'+name+'/DataSourceLogFile/'+name)
    if log_datasource_Filename:
      set('FileName', log_datasource_Filename)
    if log_rotationtype:
      cmo.setRotationType(log_rotationtype)
    if log_rotate_logon_startup:
      cmo.setRotateLogOnStartup(formatBoolean2(log_rotate_logon_startup))
    if log_filecount:
      cmo.setFileCount(int(log_filecount))
    if log_number_of_files_limited:
      cmo.setNumberOfFilesLimited(int(log_number_of_files_limited))
    if log_file_min_size:
      cmo.setFileMinSize(int(log_file_min_size))

    cd('/Servers/'+name+'/DefaultFileStore/'+name)
    cmo.setDirectory(default_file_store)

    save()
    activate()
    print "~~~~COMMAND SUCCESFULL~~~~"


except:
    print "Unexpected error:", sys.exc_info()[0]
    print "~~~~COMMAND FAILED~~~~"
    undo('true','y')
    stopEdit('y')
    raise


